# THIS SCRIPT WAS GENERATED BY CHATGPT

import subprocess
import re

# Define a function to run the SciMark benchmark and parse the results
def run_scimark(binary):
    # Run the SciMark 4 benchmark with the -large option
    result = subprocess.run([binary, "-large"], capture_output=True, text=True)
    
    # Extract the relevant Mflops values using regular expressions
    composite = float(re.search(r"Composite Score:\s+([0-9.]+)", result.stdout).group(1))
    fft = float(re.search(r"FFT\s+Mflops:\s+([0-9.]+)", result.stdout).group(1))
    sor = float(re.search(r"SOR\s+Mflops:\s+([0-9.]+)", result.stdout).group(1))
    monte_carlo = float(re.search(r"MonteCarlo:\s+Mflops:\s+([0-9.]+)", result.stdout).group(1))
    sparse = float(re.search(r"Sparse matmult\s+Mflops:\s+([0-9.]+)", result.stdout).group(1))
    lu = float(re.search(r"LU\s+Mflops:\s+([0-9.]+)", result.stdout).group(1))

    
    return (composite, fft, sor, monte_carlo, sparse, lu)

# Run the benchmark 10 times for each binary and store the results
results1 = [run_scimark("--PATH-TO-SPEC-PARALLEL-SCIMARK--") for _ in range(10)]
results2 = [run_scimark("--PATH-TO-UNMODIFIED-SCIMARK") for _ in range(10)]

# Calculate the averages for each binary
averages1 = [sum(metric) / len(metric) for metric in zip(*results1)]
averages2 = [sum(metric) / len(metric) for metric in zip(*results2)]

# Generate the LaTeX table
latex_table = r"""
\begin{table}[h!]
\centering
\begin{tabular}{|c|c|c|}
\hline
Benchmark & Average MFLOPS (spec-parallel) & Average MFLOPS (unmodified) \\
\hline
"""

benchmarks = ["Composite", "FFT", "SOR", "Monte Carlo", "Sparse matrix multiply", "LU"]
for benchmark, avg1, avg2 in zip(benchmarks, averages1, averages2):
    latex_table += f"{benchmark} & {avg1:.3f} & {avg2:.3f} \\\\ \n"

latex_table += r"""
\hline
\end{tabular}
\caption{Average SciMark 4 Benchmark Results over 10 Runs for Two Different Binaries with -large Option}
\label{table:scimark4_results}
\end{table}
"""

# Save the LaTeX table to a file
with open("scimark4_results.tex", "w") as file:
    file.write(latex_table)

print("LaTeX table generated and saved as scimark4_results.tex")

